using Content.Client.UserInterface.Controls;
using Content.Shared.Telephone;
using Robust.Client.AutoGenerated;
using Robust.Client.GameObjects;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Timing;

namespace Content.Client.Holopad;

[GenerateTypedNameReferences]
public sealed partial class HolopadIncomingCallWindow : FancyWindow
{
    [Dependency] private IEntityManager _entManager = default!;
    private readonly SpriteSystem _spriteSystem;
    [Dependency] private IGameTiming _gameTiming = default!;

    public event Action? SendHolopadAnswerCallMessageAction;
    public event Action? SendHolopadEndCallMessageAction;

    public HolopadIncomingCallWindow()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        _spriteSystem = _entManager.System<SpriteSystem>();

        AnswerCallButton.OnPressed += args => { OnHolopadAnswerCallMessage(); };
        EndCallButton.OnPressed += args => { OnHolopadEndCallMessage(); };
    }

    public void UpdateUIState(TelephoneState state, Dictionary<NetEntity, string> holopads)
    {
        AnswerCallButton.Disabled = (state != TelephoneState.Ringing);
        EndCallButton.Disabled = (state == TelephoneState.Idle || state == TelephoneState.EndingCall);
    }

    private void OnHolopadEndCallMessage()
    {
        SendHolopadEndCallMessageAction?.Invoke();
    }

    private void OnHolopadAnswerCallMessage()
    {
        SendHolopadAnswerCallMessageAction?.Invoke();
    }
}
