using System.Numerics;
using Content.Client.UserInterface.Systems.Chat.Widgets;
using Content.Shared.CCVar;
using Robust.Client.AutoGenerated;
using Robust.Client.Graphics;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Configuration;

namespace Content.Client.UserInterface.Screens;

[GenerateTypedNameReferences]
public sealed partial class SeparatedChatGameScreen : InGameScreen
{
    [Dependency] private readonly IConfigurationManager _cfg = default!;

    private readonly float _chatMinWidth;

    public SeparatedChatGameScreen()
    {
        RobustXamlLoader.Load(this);

        AutoscaleMaxResolution = new Vector2i(1080, 770);

        SetAnchorPreset(ScreenContainer, LayoutPreset.Wide);
        SetAnchorPreset(ViewportContainer, LayoutPreset.Wide);
        SetAnchorPreset(MainViewport, LayoutPreset.Wide);
        SetAnchorAndMarginPreset(Inventory, LayoutPreset.BottomLeft, margin: 5);
        SetAnchorAndMarginPreset(TopLeftContainer, LayoutPreset.TopLeft, margin: 10);
        SetAnchorAndMarginPreset(Ghost, LayoutPreset.BottomWide, margin: 80);
        SetAnchorAndMarginPreset(Hotbar, LayoutPreset.BottomWide, margin: 5);
        SetAnchorAndMarginPreset(Alerts, LayoutPreset.CenterRight, margin: 10);

        ScreenContainer.OnSplitResizeFinished += () =>
            OnChatResized?.Invoke(new Vector2(ScreenContainer.SplitFraction, 0));

        ViewportContainer.OnResized += ResizeActionContainer;

        OnResized += RecalculateViewportDesiredSize;

        _chatMinWidth = SeparatedChatPanel.MinWidth;
    }

    private void ResizeActionContainer()
    {
        float indent = 20;
        Actions.ActionsContainer.MaxGridWidth = ViewportContainer.Size.X - indent;
    }

    private void RecalculateViewportDesiredSize()
    {
        // When the main window is reszied, calculate a new min/max for the
        // ViewportContainer so that the chat will prefer to resize instead
        // of letterboxing the viewport.
        var min = _cfg.GetCVar(CCVars.ViewportMinimumWidth);
        var max = _cfg.GetCVar(CCVars.ViewportMaximumWidth);
        var scale = MainViewport.Viewport.FixedRenderScale;
        ViewportContainer.MinWidth = EyeManager.PixelsPerMeter * min * scale;
        ViewportContainer.MaxWidth = EyeManager.PixelsPerMeter * max * scale;
        // SplitContainer doesn't respect MaxSize, so set a MinSize on the chat instead.
        SeparatedChatPanel.MinWidth = Math.Max(_chatMinWidth, Width - ViewportContainer.MaxWidth);
    }

    public override ChatBox ChatBox => GetWidget<ChatBox>()!;

    public override void SetChatSize(Vector2 size)
    {
        ScreenContainer.ResizeMode = SplitContainer.SplitResizeMode.RespectChildrenMinSize;
    }
}
