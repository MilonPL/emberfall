using System.Linq;
using Content.Shared.Ghost.Roles;
using Robust.Client.AutoGenerated;
using Robust.Client.GameObjects;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Shared.Utility;

namespace Content.Client.UserInterface.Systems.Ghost.Controls.Roles
{
    [GenerateTypedNameReferences]
    public sealed partial class GhostRolesWindow : DefaultWindow
    {
        public event Action<GhostRoleInfo>? OnRoleRequestButtonClicked;
        public event Action<GhostRoleInfo>? OnRoleFollow;

        public void ClearEntries()
        {
            NoRolesMessage.Visible = true;
            EntryContainer.DisposeAllChildren();
        }

        public IEnumerable<Collapsible> GetAllCollapsibleBoxes()
        {
            return EntryContainer.Children.OfType<Collapsible>();
        }

        public Collapsible? GetCollapsibleById(string id)
        {
            return EntryContainer.Children
                .OfType<Collapsible>()
                .FirstOrDefault(c => c.Name == id);
        }

        public void AddEntry(string name, string description, bool hasAccess, FormattedMessage? reason, IEnumerable<GhostRoleInfo> roles, SpriteSystem spriteSystem)
        {
            NoRolesMessage.Visible = false;

            var ghostRoleInfos = roles.ToList();
            var rolesCount = ghostRoleInfos.Count;

            var entry = new GhostRolesEntry(name, description, hasAccess, reason, ghostRoleInfos, spriteSystem);
            entry.OnRoleSelected += OnRoleRequestButtonClicked;
            entry.OnRoleFollow += OnRoleFollow;

            if (rolesCount > 1)
            {
                var heading = new CollapsibleHeading($"{name} ({rolesCount})");

                heading.MinHeight = 32f;
                heading.AddStyleClass(ContainerButton.StyleClassButton);
                heading.HorizontalAlignment = HAlignment.Stretch;
                heading.Label.HorizontalAlignment = HAlignment.Center;
                heading.Label.HorizontalExpand = true;
                heading.HorizontalExpand = true;

                var body = new CollapsibleBody();

                var uniqueId = name.GetHashCode();

                var collapsible = new Collapsible(heading, body)
                {
                    Name = uniqueId.ToString(),
                    Orientation = BoxContainer.LayoutOrientation.Vertical,
                    Margin = new Thickness(0, 0, 0, 10),
                };

                body.AddChild(entry);

                EntryContainer.AddChild(collapsible);
            }
            else
            {
                EntryContainer.AddChild(entry);
            }
        }
    }
}
