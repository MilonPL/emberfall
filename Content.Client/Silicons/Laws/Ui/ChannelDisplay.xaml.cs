using Content.Client.Chat.Managers;
using Content.Client.Message;
using Content.Shared.Chat;
using Content.Shared.Radio;
using Content.Shared.Silicons.Laws;
using Content.Shared.Speech;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Prototypes;
using Robust.Shared.Utility;

namespace Content.Client.Silicons.Laws.Ui;

[GenerateTypedNameReferences]
public sealed partial class ChannelDisplay : Control
{
    [Dependency] private readonly IPrototypeManager _prototypeManager = default!;
    [Dependency] private readonly IChatManager _chatManager = default!;
    [Dependency] private readonly EntityManager _entityManager = default!;
    private ISawmill _sawmill = default!;
    public event Action<string>? LawChannelSelected;
    public ChannelDisplay(EntityUid? uid = null, HashSet<string>? radioChannels = null)
    {

        
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);
        _sawmill = Logger.GetSawmill("silicon_debugging");
        LawChannelSelector.OnItemSelected += args =>
            LawChannelSelected?.Invoke((string) args.Button.GetItemMetadata(args.Id)!);

        // If you can't talk, you can't state your laws...
        if(uid != null)
        {
            if (!_entityManager.TryGetComponent<SpeechComponent>(uid, out var speech) || speech.SpeechSounds is null)
                return;
        }
        if(radioChannels != null)
            AddChannels(radioChannels);
    }

    public void Update(EntityUid uid, HashSet<string>? radioChannels = null)
    {
        if(uid != null)
        {
            if (!_entityManager.TryGetComponent<SpeechComponent>(uid, out var speech) || speech.SpeechSounds is null)
            return;
        }
        if(radioChannels != null)
            AddChannels(radioChannels);
    }

    public void AddChannels(HashSet<string> radioChannels)
    {
        if (radioChannels == null)
            return;

        foreach (var radioChannel in radioChannels)
        {
            if (!_prototypeManager.TryIndex<RadioChannelPrototype>(radioChannel, out var radioChannelProto))
                continue;
            
            _sawmill.Debug($"Adding channel {radioChannel} to dropdown.");
            LawChannelSelector.AddItem(radioChannel);

        }
    }
}
