using Content.Client.UserInterface.Controls;
using Content.Shared.Xenobiology;
using Content.Shared.Xenobiology.UI;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.Xenobiology.UI;

[GenerateTypedNameReferences]
public sealed partial class CellSequencerWindow : FancyWindow
{
    public event Action? OnSync;

    public event Action<Cell?>? OnCopy;
    public event Action<Cell?>? OnAdd;
    public event Action<Cell?, bool>? OnRemove;
    public event Action<Cell?>? OnPrint;

    private Cell? _selectedCell;
    private CellSequencerEntryControl? _sequencerEntry;

    public CellSequencerWindow()
    {
        RobustXamlLoader.Load(this);

        SyncButton.OnPressed += _ => OnSync?.Invoke();

        CopyButton.OnPressed += _ => OnCopy?.Invoke(_selectedCell);
        AddButton.OnPressed += _ => OnAdd?.Invoke(_selectedCell);
        RemoveButton.OnPressed += _ =>
        {
            OnRemove?.Invoke(_selectedCell, _sequencerEntry?.Remote ?? false);
            SelectedCellEntry(null);
        };
        PrintButton.OnPressed += _ => OnPrint?.Invoke(_selectedCell);
    }

    public void UpdateState(CellSequencerUiState sequencerUiState)
    {
        InsideCellContainer.RemoveAllChildren();

        foreach (var savedCell in sequencerUiState.InsideCells)
        {
            var entry = new CellSequencerEntryControl(savedCell, false);
            entry.OnSelect += SelectedCellEntry;
            InsideCellContainer.AddChild(entry);
        }

        RemoteCellContainer.RemoveAllChildren();
        foreach (var savedCell in sequencerUiState.RemoteCells)
        {
            var entry = new CellSequencerEntryControl(savedCell, true);
            entry.OnSelect += SelectedCellEntry;
            RemoteCellContainer.AddChild(entry);
        }
    }

    private void SelectedCellEntry(CellSequencerEntryControl? entry)
    {
        _sequencerEntry?.SetState(true);

        _selectedCell = entry?.Cell;
        _sequencerEntry = entry;
        _sequencerEntry?.SetState(false);

        NoSelectedLabel.Visible = _selectedCell is null;
    }
}
