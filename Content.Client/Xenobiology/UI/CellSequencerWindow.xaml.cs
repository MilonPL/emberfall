using Content.Client.UserInterface.Controls;
using Content.Shared.Xenobiology;
using Content.Shared.Xenobiology.UI;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.Xenobiology.UI;

[GenerateTypedNameReferences]
public sealed partial class CellSequencerWindow : FancyWindow
{
    public event Action? OnSync;
    public event Action? OnScan;
    public event Action? OnCopy;
    public event Action? OnAdd;
    public event Action? OnRemove;
    public event Action? OnPrint;

    private Cell? _slectedCell;

    public CellSequencerWindow()
    {
        RobustXamlLoader.Load(this);

        SyncButton.OnPressed += _ => OnSync?.Invoke();

        ScanButton.OnPressed += _ => OnScan?.Invoke();
        CopyButton.OnPressed += _ => OnCopy?.Invoke();

        AddButton.OnPressed += _ => OnAdd?.Invoke();
        RemoveButton.OnPressed += _ => OnRemove?.Invoke();
        PrintButton.OnPressed += _ => OnPrint?.Invoke();
    }

    public void UpdateState(CellSequencerUiState sequencerUiState)
    {
        _slectedCell = sequencerUiState.SelectedCell;

        SavedContainer.RemoveAllChildren();
        foreach (var savedCell in sequencerUiState.SavedCells)
        {
            var entry = new CellSequencerEntryControl(savedCell);
            SavedContainer.AddChild(entry);
        }
    }
}
